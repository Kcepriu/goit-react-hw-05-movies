{"version":3,"file":"static/js/752.ff27a8c8.chunk.js","mappings":"0RAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uP,SCSvB,EATiB,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SACtB,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECRYE,EAAOL,EAAAA,GAAAA,IAAH,yFCwBjB,EAtBkC,WAAO,IAAD,IAEhCM,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,OACE,UAACJ,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOM,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMJ,GAAG,UAAUM,MAAO,CAAEC,KAAMH,GAAlC,4BAOT,ECtBYD,EAAOL,EAAAA,GAAAA,IAAH,wDAKJU,EAAYV,EAAAA,GAAAA,IAAH,kEAKTW,EAAQX,EAAAA,GAAAA,IAAH,wCC6BlB,EAtCyB,SAAC,GAA0B,IAAxBY,EAAuB,EAAvBA,iBAExBC,EAMED,EANFC,WACAC,EAKEF,EALFE,eACAC,EAIEH,EAJFG,YACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,SACAC,EACEN,EADFM,WAGF,OACE,UAAC,EAAD,YACE,SAACR,EAAD,WACE,SAACC,EAAD,CAAOQ,IAAKN,EAAYO,IAAKN,OAG/B,4BACE,kCAAQA,EAAR,aAA2BC,EAA3B,QACA,6CAAmBC,EAAnB,QACA,uCACA,uBAAIC,KACJ,qCACA,uBAAIC,SAIX,E,gBCoDD,EAxEqB,WAAO,IAAD,IAEjBG,GAAkBC,EAAAA,EAAAA,KAAlBD,cACR,GAAgDE,EAAAA,EAAAA,UAAS,MAAzD,eAAOX,EAAP,KAAyBY,EAAzB,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFrB,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UA4C7C,OA1CAoB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,yGACEL,GAAY,GADd,kBAUcL,EAAcW,6BACtBL,EACAG,GAZN,uBAIMG,EAJN,EAIMA,YACAhB,EALN,EAKMA,SACAH,EANN,EAMMA,eACAoB,EAPN,EAOMA,aACAC,EARN,EAQMA,aACAC,EATN,EASMA,OATN,UAe6Bf,EAAcgB,YAAY,QAfvD,QAeUxB,EAfV,OAiBIW,EAAoB,CAClBX,WAAW,GAAD,OAAKA,GAAL,OAAkBoB,GAC5BnB,eAAAA,EACAC,YAAamB,EAAaI,MAAM,EAAG,GACnCtB,YAAauB,KAAKC,KAA4B,GAAvBC,OAAON,IAC9BlB,SAAAA,EACAC,WAAYG,EAAcqB,aAAaN,KAvB7C,kDA0BIZ,EAAoB,MACpBmB,QAAQC,IAAI,eA3BhB,yBA6BIlB,GAAY,GA7BhB,8EAFc,sBAqCd,OArCc,mCAmCdmB,GAEO,WACLf,EAAWgB,OACZ,CACF,GAAE,CAACzB,EAAeM,KAGjB,gCACGF,IAAY,SAACsB,EAAA,EAAD,KAEXtB,IACA,iCACE,SAAC,EAAD,CAAUvB,GAAII,EAAd,sBACsB,OAArBM,IACC,SAAC,EAAD,CAAkBA,iBAAkBA,KAEtC,SAAC,EAAD,CAA2BJ,MAAO,CAAEC,KAAMH,MAC1C,SAAC,EAAA0C,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/AdditionalInformationFilm/AdditionalInformationFilm.styled.js","components/AdditionalInformationFilm/AdditionalInformationFilm.js","components/MovieInformation/MovieInformation.styled.js","components/MovieInformation/MovieInformation.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  /* text-transform: uppercase; */\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  border-top: 1px solid gray;\n  border-bottom: 1px solid gray;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Wrap } from './AdditionalInformationFilm.styled';\n\nconst AdditionalInformationFilm = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n  return (\n    <Wrap>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </Wrap>\n  );\n};\n\nexport default AdditionalInformationFilm;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const WrapImage = styled.div`\n  max-width: 300px;\n  min-width: 300px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrap, WrapImage, Image } from './MovieInformation.styled';\n\nconst MovieInformation = ({ filmInformatioin }) => {\n  const {\n    posterPath,\n    original_title,\n    releaseDate,\n    voteAverage,\n    overview,\n    genresText,\n  } = filmInformatioin;\n\n  return (\n    <Wrap>\n      <WrapImage>\n        <Image src={posterPath} alt={original_title} />\n      </WrapImage>\n\n      <div>\n        <h1>{`${original_title} (${releaseDate})`}</h1>\n        <p>{`User Score: ${voteAverage}%`}</p>\n        <h2>Overviews</h2>\n        <p>{overview}</p>\n        <h2>Genders</h2>\n        <p>{genresText}</p>\n      </div>\n    </Wrap>\n  );\n};\n\nMovieInformation.propTypes = {\n  filmInformatioin: PropTypes.exact({\n    posterPath: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    voteAverage: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genresText: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default MovieInformation;\n","import { useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport BackLink from 'components/BackLink';\nimport AdditionalInformationFilm from 'components/AdditionalInformationFilm';\nimport MovieInformation from 'components/MovieInformation';\nimport Loader from 'components/Loader';\nimport { useContextFetchFilm } from 'components/ContextFetchFilm/ContextFetchFilm';\n\nconst MovieDetails = () => {\n  // * Беру контекст для роботи із APIзапросами\n  const { apiThemoviedb } = useContextFetchFilm();\n  const [filmInformatioin, setFilmInformatioin] = useState(null);\n  const [showLoad, setShowLoad] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchInformation() {\n      setShowLoad(true);\n      try {\n        const {\n          poster_path,\n          overview,\n          original_title,\n          release_date,\n          vote_average,\n          genres,\n        } = await apiThemoviedb.fetchFullInformationFromFilm(\n          movieId,\n          controller\n        );\n\n        const posterPath = await apiThemoviedb.getUrlImage('w342');\n\n        setFilmInformatioin({\n          posterPath: `${posterPath}${poster_path}`,\n          original_title,\n          releaseDate: release_date.slice(0, 4),\n          voteAverage: Math.ceil(Number(vote_average) * 10),\n          overview,\n          genresText: apiThemoviedb.getGendeText(genres),\n        });\n      } catch {\n        setFilmInformatioin(null);\n        console.log('Error fetch');\n      } finally {\n        setShowLoad(false);\n      }\n    }\n\n    fetchInformation();\n\n    return () => {\n      controller.abort();\n    };\n  }, [apiThemoviedb, movieId]);\n\n  return (\n    <>\n      {showLoad && <Loader />}\n\n      {!showLoad && (\n        <>\n          <BackLink to={backLinkHref}> Go back</BackLink>\n          {filmInformatioin !== null && (\n            <MovieInformation filmInformatioin={filmInformatioin} />\n          )}\n          <AdditionalInformationFilm state={{ from: backLinkHref }} />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledLink","styled","Link","to","children","size","Wrap","backLinkHref","useLocation","state","from","WrapImage","Image","filmInformatioin","posterPath","original_title","releaseDate","voteAverage","overview","genresText","src","alt","apiThemoviedb","useContextFetchFilm","useState","setFilmInformatioin","showLoad","setShowLoad","movieId","useParams","useEffect","controller","AbortController","fetchFullInformationFromFilm","poster_path","release_date","vote_average","genres","getUrlImage","slice","Math","ceil","Number","getGendeText","console","log","fetchInformation","abort","Loader","Suspense","fallback"],"sourceRoot":""}